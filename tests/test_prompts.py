def get_slide_prompt(slide_type: str, context: str, audience: str) -> str:
    """Возвращает промпт для конкретного типа слайда"""

    base_prompts = {
        "title": {
            "prompt": """Сгенерируй убедительный заголовок для инвестиционной презентации проекта.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- Максимально 5-7 слов
- Ярко и запоминающеся
- Отражает суть проекта
- Подходит для {audience}

Заголовок:""",
            "description": "Генерация заголовка презентации"
        },

        "problem": {
            "prompt": """Опиши проблему, которую решает проект, для инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- 2-3 абзаца
- Конкретные цифры и факты если есть в контексте
- Покажи масштаб проблемы
- Объясни почему эта проблема важна
- Язык: профессиональный но понятный для {audience}

Описание проблемы:""",
            "description": "Описание проблемы проекта"
        },

        "solution": {
            "prompt": """Опиши решение, которое предлагает проект, для инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- 2-3 ключевых преимущества
- Чем решение лучше существующих альтернатив
- Технологическая уникальность если есть
- Простое и понятное объяснение
- Формат: маркированный список или короткие абзацы

Описание решения:""",
            "description": "Описание решения проекта"
        },

        "market": {
            "prompt": """Проанализируй рыночный контекст для инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- Размер рынка (если есть в данных)
- Тренды и драйверы роста
- Целевая аудитория проекта
- Конкурентная среда
- Используй конкретные цифры из контекста когда возможно

Анализ рынка:""",
            "description": "Анализ рынка и возможностей"
        },

        "team": {
            "prompt": """Опиши команду проекта для инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- Ключевые участники команды
- Их экспертиза и опыт
- Почему эта команда подходит для проекта
- Уникальные компетенции
- Если данных о команде нет - предложи общее описание идеальной команды

Описание команды:""",
            "description": "Описание команды проекта"
        },

        "finance": {
            "prompt": """Представь финансовые показатели проекта для инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- Ключевые финансовые метрики
- Прогноз выручки если есть
- Период окупаемости
- Основные статьи расходов
- Если данных нет - предложи типовую структуру финансов
- Используй конкретные числа из контекста

Финансовые показатели:""",
            "description": "Финансовые показатели проекта"
        },

        "summary": {
            "prompt": """Сделай краткое резюме проекта для заключительного слайда инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Требования:
- 3-4 ключевых пункта
- Основные выводы
- Призыв к действию
- Кратко и убедительно
- Подведи итоги почему проект перспективен

Резюме проекта:""",
            "description": "Краткое резюме проекта"
        }
    }

    if slide_type not in base_prompts:
        # Дефолтный промпт для неизвестных типов слайдов
        return f"""Сгенерируй контент для слайда '{slide_type}' инвестиционной презентации.

Контекст проекта: {context}
Целевая аудитория: {audience}

Контент для слайда:"""

    prompt_template = base_prompts[slide_type]["prompt"]
    return prompt_template.format(context=context, audience=audience)


def get_audience_specific_instructions(audience: str) -> str:
    """Возвращает инструкции в зависимости от целевой аудитории"""
    instructions = {
        "инвесторы": "Акцент на ROI, масштабируемость, рынок, финансовые показатели",
        "топ-менеджмент": "Акцент на стратегическое соответствие, операционную эффективность",
        "эксперты": "Акцент на технологические детали, методологию, инновации"
    }
    return instructions.get(audience, "Профессиональный и убедительный стиль")